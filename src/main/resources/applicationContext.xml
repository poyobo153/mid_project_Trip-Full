<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- annotation 등록 -->
	<context:component-scan base-package="com.springbook.biz" />
	
	<aop:aspectj-autoproxy />
	
	<!-- DataSource 설정 : 방법1
	<context:property-placeholder location="classpath:config/database.properties"/>
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
							destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>
	 -->
	 
	<!-- 방법2  	-->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
							destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<property name="username" value="scott"/>
		<property name="password" value="tiger"/>
	</bean>
	
	
<!-- Transaction 설정 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="txPointcut" expression="execution(* com.springbook.biz..impl*(..))" />
		<aop:advisor pointcut-ref="txPointcut" advice-ref="txAdvice"/><!-- aop:advisor _aspect와 동일개념 -->
	</aop:config>
	
	<!-- Spring과 MyBatis 연동 설정 : 방법1 -->
	<bean id="sqlSession"  class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/> <!-- 스프링은 마이바티스에게 기존 설정된 dataSource 정보 전달  -->
		<property name="configLocation" value="classpath:sql-map-config.xml"/> <!-- 스프링은 마이바티스에게 설정파일 위치 정보/요청사항 전달  -->
	</bean>
	
	<!-- Spring과 MyBatis 연동 설정 : 방법2 _다이렉트로 전달_생성자통해서. -->
	<bean class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSession"/><!-- 생성자 생성시점에 전달받은 정보를  -->
	</bean>

</beans>
